@inject ICartService ShoppingCart
<div class="content pt-10 py-5 font-size-xs clearfix footer-fixed">
    <a class="col footer-links px-2 py-1 active" aria-current="page" href="/restaurants">
        <i class="si si-pointer fa-2x"></i> <br><span class="active-footer-tab">Near Me</span>
    </a>
    <a class="col footer-links px-2 py-1 active" aria-current="page" href="/search">
        <i class="si si-magnifier fa-2x"></i> <br><span class="">Filter</span>
    </a>

    <a class="col footer-links px-2 py-1 active" aria-current="page" href="/cart">
        <i class="si si-bag fa-2x"></i> <br><span class="">
            Cart
            <span class="cart-quantity-badge" style="background-color: rgb(252, 128, 25);">@CartItems</span>
        </span>
    </a>
    <AuthorizeView>
        <Authorized>
            <a class="col footer-links px-2 py-1 active" aria-current="page" href="/MyAccount">
                <i class="si si-user fa-2x"></i> <br><span class="">My Account</span>
            </a>
        </Authorized>
        <NotAuthorized>
            <a class="col footer-links px-2 py-1 active" aria-current="page" href="/login/redirect/MyAccount">
                <i class="si si-user fa-2x"></i> <br><span class="">Login/Register</span>
            </a>
        </NotAuthorized>
    </AuthorizeView>

    @ChildContent
</div>

@code{
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public int CartItems { get; set; } = 0;
    [Parameter]
    public bool OverideCartItems { get; set; } = false;

    //During Update
    protected override async Task OnParametersSetAsync()
    {
        try
        {
            if (!OverideCartItems)
                CartItems = await ShoppingCart.GetTotalItemsAsync();
        }
        catch (Exception)
        {

        }
    }
}